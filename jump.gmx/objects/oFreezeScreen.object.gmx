<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
[a,0] = start x
[a,1] = start y
[a,2] = end x 
[a,3] = end y 
[a,4] = alpha
*/


a = 0;
parts = 20;
view_w = view_wview;
view_h = view_hview;

part_h = (view_h/parts);
part_w = (view_w/parts);
for (n = 0 n&lt;=(parts*3) n++)
{
 part[n] = 0
}



for (n = 0 n&lt;=(parts*3) n++)
{
 part[n,e_start_x] = (part_h*n);
 part[n,e_start_y] = (part_w*n);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_yellow)
res = 0;
for(c = 0 c&lt;parts c++)
{
if (c = 1) {res = part_w/2;} else {res = 0}
// part1
draw_line(view_xview+part[c,e_start_x]-(part_w*c),view_yview+part[c,e_start_y]+part_h,view_xview+part[c,e_start_x]+(part_w*c)+res,view_yview)
// part2
draw_line(view_xview+part[c,e_start_x],view_yview+part[c,e_start_y]-(part_w*c),view_xview+part[c,e_start_x]+part_w,view_yview+part[c,e_start_y]-part_w*c)
// part3
draw_line(view_xview+part[c,e_start_x],view_yview+part[c,e_start_y]+part_h,view_xview+part[c,e_start_x]+part_w,view_yview+part[c,e_start_y])
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
