<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>oWallTinyColored</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Congig



//  Edit:
//**************
r = 191;
g = 255;
b = 0;


space = 5;
//**************



if (image_angle != 0) {sprite_index = sWallPrecise;}
ride = 0;
color = make_colour_rgb(r, g, b); // c_lime;   (191,255,0)
alarm[0] = 1;
draw = 0;


pr_x = sprite_get_width(sprite_index);
pr_x = (pr_x*image_xscale);
width = (pr_x/space);


pr_y = sprite_get_height(sprite_index);
pr_y = (pr_y*image_yscale);
width_y = (pr_y/space);


k_x = 0;
k_y = 0;

alpha = 0;




   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Creation read only
draw = 1;

xss = xs;
yss = ys;

if (xs != x) {k_x = pr_x;}
if (ys != y) {k_y = pr_y;}



trail = distance_to_point(xs,ys);
trail_total = trail;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up ride



if (draw = 1)
{
// alpha
trail = distance_to_point(xs,ys);
alpha = abs((trail/trail_total)-1);



// you gonna go far kid ;)
if (ride = 0)
   {
    if (instance_number(oPlayer) &gt; 0)
       {
        if (distance_to_object(oPlayer) &lt; 5 )
           {
              if (ride = 0) {ride = 1;}
           }
       }

   }

// Set up lerp 
if (ride = 1)
   {
   
    if (instance_number(oPlayer) &gt; 0)
       {
        if (distance_to_object(oPlayer) &gt; 5 ) 
           {
            ride = 0;
           }
       
       }
   
   }
   
// back to origin
if (ride = 0)
   {
    if (distance_to_point(xstart,ystart) &gt; 1)
       {
        move_towards_point(xstart,ystart,spd);
       
       }
       
       if (g &gt; 150)
       {
        g -= 1;
        color = make_colour_rgb(r,g,b);
       }

   }
// to target (ride)
if (ride = 1)
   {
      if (g &lt; 255)
       {
        g += 1;
        color = make_colour_rgb(r,g,b);
       }



    if (distance_to_point(xs-k_x,ys-k_y) &gt; 1)
       {
        move_towards_point(xs-k_x,ys-k_y,spd);
       
       }
   }
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// geniální! 

      



draw_set_colour(color)
d3d_transform_set_rotation_z(image_angle)
d3d_transform_add_translation(x,y,0)
draw_rectangle(0,0,80+((80*image_xscale)-80),48+((48*image_yscale)-48),1) //+(80*image_xscale) 


draw_set_color(c_black)
draw_rectangle(2,2,80+((80*image_xscale)-80)-2,48+((48*image_yscale)-48)-2,0) //+(80*image_xscale) 

//draw_rectangle(x,y,x+(80*image_xscale),y+(48*image_yscale),1)
d3d_transform_set_identity()




draw_set_colour(c_white)


/*
var i, steps, xx, yy, radius;
 steps=20;
 xx=50;
 yy=50;
 radius=30;
 draw_primitive_begin(pr_trianglefan);
 draw_vertex(xx, yy);
 for(i = 0; i &lt;= steps; i += 1)
    {
    draw_vertex(xx + lengthdir_x(radius, 270 * i / steps), yy + lengthdir_y(radius, 270 * i / steps));
    }
 draw_primitive_end();

 // 3/4 kruhu



*/
if (draw = 1 &amp;&amp; ride = 1)
{
xa = (xss-k_x);
ya = (yss-k_y);

draw_set_alpha(alpha)
draw_primitive_begin(pr_linelist);

// x part
for (i = 0; i&lt;= (width)-1; i+=2)
    {
     draw_line_colour(xa+(i*space),yss,xa+((i*space)+space),yss,color,color);
     draw_line_colour(xa+(i*space),yss+pr_y,xa+((i*space)+space),yss+pr_y,color,color);

    }
// y part
for (i = 0; i&lt;= (width_y)-1; i+=2)
    {
     draw_line_colour(xss,ya+(i*space),xss,ya+((i*space)+space),color,color);
     draw_line_colour(xss-pr_x,ya+(i*space),xss-pr_x,ya+((i*space)+space),color,color);


    }


draw_primitive_end(); 
draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.300000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.0199999995529652</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-40,-24</point>
    <point>40,-24</point>
    <point>40,24</point>
  </PhysicsShapePoints>
</object>
