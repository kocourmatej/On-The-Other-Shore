<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWallTinyDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = 270;
speed = 0.5
friction = -0.2; 
alarm[2] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dis= distance_to_object(oPlayer)
if (k = 0)
{
if (distance_to_object(oPlayer) &lt;=2)
{
if (collide = 0)
   {
   
    collide=1;
    alarm[1] = 15;
   }
}

if (friction &gt; -2)
{
if (collide = 1)
{
    if (distance_to_object(oPlayer) &gt; 5)
       {
        if (image_alpha &lt;= 0)
          {
           k = 1;
          }

       }
       friction -= 0.005;
       image_alpha -= 0.020;
      
}
}
}
if (k = 1)
   {
    point_x = xstart;
    point_y = ystart;
    if (spd &lt; 5) {spd += 0.05}
    if (distance_to_point(point_x,point_y) &gt; 1)
       {
        move_towards_point(point_x,point_y,spd)
        if (image_alpha &lt; 1) {image_alpha += 0.02}
       }
       else {
       
           k = 0
           collide = 0;
           image_alpha = 1;
           speed = 0;
           spd = 0;
           y = ystart;
       }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (k = 0) {sprite_index = sWallTinyDown draw_rectangle_colour(x,y,x+80*image_xscale,y+46*image_yscale,c_fuchsia,c_fuchsia,c_fuchsia,c_fuchsia,1)}
if (k = 1) {draw_set_alpha(image_alpha) draw_rectangle_colour(x,y,x+80*image_xscale,y+46*image_yscale,c_fuchsia,c_fuchsia,c_fuchsia,c_fuchsia,1) sprite_index = sNoColl draw_set_alpha(1)}
draw_set_colour(c_white)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>40,40</point>
  </PhysicsShapePoints>
</object>
