<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>oLogic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Declare variables

event_inherited()

if ((room = mapLevel1_time) || (room = mapLevel2_time) || (room = mapLevel3_time))
{
    if (audio_is_playing(sndTheme1)) || (audio_is_playing(sndTheme3))
    {
    audio_stop_all();
    }
    if(!audio_is_playing(sndTheme2)) {audio_play_sound(sndTheme2,1,1)}
}
else if ((room = mapLevel5_real) || (room = mapLevel6_real) || (room = mapLevel7_real))
{
    if (audio_is_playing(sndTheme1)) || (audio_is_playing(sndTheme2))
    {
    audio_stop_all();
    }
    if(!audio_is_playing(sndTheme3)) {audio_play_sound(sndTheme3,1,1)}
}
else
{
    if (audio_is_playing(sndTheme2)) || (audio_is_playing(sndTheme3))
    {
    audio_stop_all();
    }
    if(!audio_is_playing(sndTheme1)) {audio_play_sound(sndTheme1,1,1)}
}

instance_create(x,y,oCheckpointSystem);
instance_create(x,y,oOptimalizace);
//instance_create(x,y,oTextLevelName);

coins = 0;
can_move = 1;
weight = 1;
draw = 1;
jump = 0;
a = 0;
hp = 100;
max_hp = hp;
view_view = 270;                                                   
aa = 1
hp_curr = hp;
dis_port =  0;
v_rychlost = 12;
max_trail_parts = 15; 
trail_count = -1; 
trail_col = c_yellow;

  length = 30;
    w1 = 5;
    w2 = 0;
    c1 = c_purple;
    c2 = c_fuchsia;
    a1 = 1;
    a2 = 0.1;
    xscatter = 1;
    yscatter = 1;
    xdrift = 0;
    ydrift = 0;
    trail = trail_create(length,x,y);
                                 
    
    
   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free RAM

ds_grid_destroy(trail);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart room

room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Suicide

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw trail again

draw = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart position

speed = 0;
x = xstart
y = ystart

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Screen rotate

if (hp &lt;= 0)
   {
   
   if (oCheckpointSystem.StateSaved)
    {
    scrPlayerStopDraw();
    with(oCheckpointSystem)
    {
    game_load("save.otos")
    }
    
    }
    else 
    {   
    room_restart();
    }

   }
   
w1 = 4+weight
event_inherited()
unstick(16)
g_dir = view_view;
if (hp_curr != hp) {hp_curr = hp;}
if (hp_curr != hp) {}
    c1 = make_colour_rgb(128*(hp/max_hp),0,128*(hp/max_hp)); //128,0,128
    c2 =  make_colour_rgb(255*(hp/max_hp),0,255*(hp/max_hp));;  // 255,0,255

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update trail
    trail_update(trail,x,y);
    trail_drift(trail,xdrift,ydrift);
    trail_scatter(trail,xscatter,yscatter);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move &amp; actions

if (can_move)
{

__move = ((keyboard_check(vk_right)+keyboard_check(ord("D")))-(keyboard_check(vk_left)+keyboard_check(ord("A"))));
if (__move &gt; 0 &amp;&amp; hspd &lt; 8) {
 hspd = min(hspd+2,8);
} else if (__move &lt; 0 &amp;&amp; hspd &gt; -8) {
 hspd = max(hspd-2,-8);
}


if (hp&lt;=0) {event_user(0);}
if ( (keyboard_check_pressed(vk_up) || keyboard_check(ord("W"))) &amp;&amp; inAir == false) {
 vspd = -v_rychlost;
}

if (keyboard_check_pressed(ord("R")))
   {
    can_move = 0;
    screffectRestart()
    alarm[10] = 20;
   }
}
if (keyboard_check_pressed(vk_escape))
   {
   game_end();
   }
   
if (keyboard_check_pressed(ord("N")))  // Vaškův request
   {
   room_goto_next();
   }
if (keyboard_check_pressed(ord("P")))  // Vaškův request
   {
   room_goto_previous();
   }
if (weight &lt; 1)
    {
    weight = 0.5;
    }             

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Suicide system

if (oCheckpointSystem.StateSaved)
    {
    scrPlayerStopDraw();
    with(oCheckpointSystem)
    {
    game_load("save.otos")
    }
    
    }
    else
    {   
    screffectRestart()
    room_restart();
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Suicide

if (can_move = 1)
{
event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self

if (can_move &amp;&amp; draw = 1)
{
draw_trail(trail,w1,w2,c1,c2,a1,a2);
draw_set_colour(c_white)
if (abs(view_angle) = 360)
   {
    view_angle = 0;
   }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.300000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>6,0</point>
    <point>6,6</point>
  </PhysicsShapePoints>
</object>
