<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// proměnné 
event_inherited();

// Vlastnosti
weight = ((sprite_get_width(sWall) / 32) * sprite_get_height(sWall) * 32);
move = "down";
hspd = 0; 
vspd = 0; 
g_dir = 270;
onMeList = ds_list_create();
notOnMeList = ds_list_create();
entity_collision = false;
fall_speed = 0;

// Rychlost transformace
n   =  10;
spd = (n/255);

// Kanály shaderu:
channel_mask = shader_get_uniform(shdColor, "f_ChannelMask");

// Základ
r_o = 1;
g_o = 1;
b_o = 1;

// Komplet shader
r_s = (139/255)
g_s = 0;
b_s = 1;

// Finální hodnoty
r = r_o;
g = g_o;
b = b_o;
a = 1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(onMeList);
ds_list_destroy(notOnMeList);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrMovingPlatform()
if (instance_number(oPlayer) &gt; 0)
{
if (distance_to_object(oPlayer) &lt;= 2 &amp;&amp; move = "down")
   {
    // Rozdíl shaderu a originálu (orig. větší cuz bílá)
    dif_r = abs(r_s - r);
    dif_g = abs(g_s - g);
    dif_b = abs(b_s - b);
    
    // Vyvážení červeného kanálu
    if (r&gt;r_s)
       {
        r -= spd;
       }
       else {r += spd}
       
   // Vyvážení zeleného kanálu    
   if (g&gt;g_s)
       {
        g -= spd;
       }
       else {g += spd}
   
   // Vyvážení modrého kanálu    
   if (b&gt;b_s)
       {
        b -= spd;
       }
       else {b += spd}

  // Pád do temnoty ;)      
  if ( (dif_r &lt; 2/4) &amp;&amp; (dif_g &lt; 2/4) &amp;&amp; (dif_b &lt; 2/4))
     {
      if (place_free(x,y+1))
         {
           weight_dif = abs(weight - oPlayer.weight);  // jen pro jistotu 
           
           fall_speed = (weight - weight_dif)/5;
           vspd += fall_speed;                     
         }
         else {vspd = 0 y = yprevious move = "up"}
     }
   }
   else
       {
       
   if (r&gt;r_o)
       {
        r -= spd;
       }
       else if (r&lt;r_o) {r += spd}
       
   if (g&gt;g_o)
       {
        g -= spd;
       }
       else if (g&lt;g_o) {g += spd}
       
   if (b&gt;b_o)
       {
        b -= spd;
       }
       else if (b&lt;b_o) {b += spd}

         // Návrat z temnoty ;)
         if (distance_to_point(xstart,ystart) &gt; 2)
            {
             if (vspd &lt; 10)
                {
                
                 vspd -= fall_speed;            
                }
            }
            else {vspd = 0; move = "down";}
       
       
       
       
       }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( shader_is_compiled(shdColor))
    {    
    shader_set(shdColor);    
                                    // 139, 0, 255,255
    shader_set_uniform_f(channel_mask, r  , g,   b, a);           
    draw_self();
    shader_reset();
        
   // draw_text(x,y,fall_speed)    
    }
    else {show_message("Sorry, your GPU does not support shaders, time for upgrade man."); game_end();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.300000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-144,-24</point>
    <point>144,-24</point>
    <point>144,24</point>
    <point>-144,24</point>
  </PhysicsShapePoints>
</object>
